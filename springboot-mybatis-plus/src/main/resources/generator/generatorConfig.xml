<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource="generator/generatorConfig.properties"/>

    <!--
         context:生成一组对象的环境
         id:必选，上下文id，用于在生成错误时提示
         defaultModelType:指定生成对象的样式
             1，conditional：类似hierarchical；
             2，flat：所有内容（主键，blob）等全部生成在一个对象中；
             3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
         targetRuntime:
             1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
             2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
         introspectedColumnImpl：类全限定名，用于扩展MBG
     -->
    <context id="mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
         一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
        -->
        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，
        比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 连接数据库 -->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>

        <javaModelGenerator targetPackage="${mapper.targetModelPackage}" targetProject="src/test/java"/>
        <sqlMapGenerator targetPackage="${mapper.targetXMLPackage}" targetProject="src/test/resources"/>
        <javaClientGenerator targetPackage="${mapper.targetMapperPackage}" targetProject="src/test/java"
                             type="XMLMAPPER"/>

        <!-- 这里是数据库的表名table_user 以及 POJO类的名字User -->
        <table tableName="t_attach" domainObjectName="User">
            <!--            <generatedKey column="id" sqlStatement="JDBC"/>-->
        </table>

        <!--         <table tableName="gis_address_type_dict" domainObjectName="GisAddressType"
                    enableCountByExample="false" enableSelectByExample="false"
                    enableUpdateByExample="false" enableDeleteByExample="false">
                    </table> -->


    </context>
</generatorConfiguration>